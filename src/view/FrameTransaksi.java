/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

/**
 *
 * @author ASUS
 */
import java.io.*;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import connection.KoneksiDatabase;
import java.awt.Color;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.*;
import java.text.SimpleDateFormat;


public class FrameTransaksi extends javax.swing.JFrame {
    /**
     * Creates new form FrameTransaksi
     */
    private Connection conn;
    public FrameTransaksi() {
        initComponents();
        this.setLocationRelativeTo(null);
        setSize(1200, 800);
        getContentPane().setBackground(new Color(179, 230, 255)); 
        conn = KoneksiDatabase.getKoneksi();
        loadData();

    }
     private void loadData() {
        try {
            String sql = "SELECT t.*, m.merk, m.model FROM transaksi t " +
                        "JOIN mobil m ON t.id_mobil = m.id_mobil";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            
            DefaultTableModel model = new DefaultTableModel();
            model.addColumn("ID Transaksi");
            model.addColumn("ID Mobil");
            model.addColumn("Merk Mobil");
            model.addColumn("Model Mobil");
            model.addColumn("Nama Penyewa");
            model.addColumn("No KTP");
            model.addColumn("Tanggal Sewa");
            model.addColumn("Tanggal Kembali");
            model.addColumn("Total Biaya");
            model.addColumn("Status");
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("id_transaksi"),
                    rs.getString("id_mobil"),
                    rs.getString("merk"),
                    rs.getString("model"),
                    rs.getString("nama_penyewa"),
                    rs.getString("no_ktp"),
                    sdf.format(rs.getDate("tanggal_sewa")),
                    sdf.format(rs.getDate("tanggal_kembali")),
                    rs.getDouble("total_biaya"),
                    rs.getString("status_transaksi")
                });
            }
            
            tblTransaksi.setModel(model);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading data: " + e.getMessage());
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtIDTransaksi = new javax.swing.JTextField();
        txtIDMobil = new javax.swing.JTextField();
        txtNamaPenyewa = new javax.swing.JTextField();
        txtNoKTP = new javax.swing.JTextField();
        txtTotalBiaya = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransaksi = new javax.swing.JTable();
        DateTanggalSewa = new com.toedter.calendar.JDateChooser();
        DateTanggalKembali = new com.toedter.calendar.JDateChooser();
        cmbStatus = new javax.swing.JComboBox<>();
        btnSimpan = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnHitung = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("ID Transaksi:");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("ID Mobil:");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("Status:");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("Nama Penyewa:");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setText("No KTP:");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel6.setText("Total Biaya:");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setText("Tanggal Sewa:");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setText("Tanggal Kembali:");

        tblTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Transaksi", "ID Mobil", "Nama Penyewa", "No KTP", "Tanggal Sewa", "Tanggal Kembali", "Total Biaya", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblTransaksi);

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aktif", "Selesai" }));

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnHitung.setText("Hitung Biaya");
        btnHitung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHitungActionPerformed(evt);
            }
        });

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtIDTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtIDMobil, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtNamaPenyewa, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTotalBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtNoKTP, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                                            .addComponent(DateTanggalSewa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(DateTanggalKembali, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(cmbStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(btnSimpan)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnHapus)
                        .addGap(18, 18, 18)
                        .addComponent(btnHitung)
                        .addGap(93, 93, 93)
                        .addComponent(btnCetak, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 61, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtIDTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtIDMobil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNamaPenyewa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNoKTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7))
                    .addComponent(DateTanggalSewa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(DateTanggalKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTotalBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnUpdate)
                    .addComponent(btnHapus)
                    .addComponent(btnHitung)
                    .addComponent(btnCetak))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        try {
            // Update status mobil menjadi 'Disewa'
            String updateMobilSql = "UPDATE mobil SET status = 'Disewa' WHERE id_mobil = ?";
            PreparedStatement psMobil = conn.prepareStatement(updateMobilSql);
            psMobil.setString(1, txtIDMobil.getText());
            psMobil.executeUpdate();
            
            // Simpan transaksi
            String sql = "INSERT INTO transaksi VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, txtIDTransaksi.getText());
            ps.setString(2, txtIDMobil.getText());
            ps.setString(3, txtNamaPenyewa.getText());
            ps.setString(4, txtNoKTP.getText());
            ps.setDate(5, new java.sql.Date(DateTanggalSewa.getDate().getTime()));
            ps.setDate(6, new java.sql.Date(DateTanggalKembali.getDate().getTime()));
            ps.setDouble(7, Double.parseDouble(txtTotalBiaya.getText()));
            ps.setString(8, cmbStatus.getSelectedItem().toString());
            
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data berhasil disimpan");
            clearForm();
            loadData();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error saving data: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       try {
            String sql = "UPDATE transaksi SET nama_penyewa=?, no_ktp=?, tanggal_sewa=?, " +
                        "tanggal_kembali=?, total_biaya=?, status_transaksi=? WHERE id_transaksi=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, txtNamaPenyewa.getText());
            ps.setString(2, txtNoKTP.getText());
            ps.setDate(3, new java.sql.Date(DateTanggalSewa.getDate().getTime()));
            ps.setDate(4, new java.sql.Date(DateTanggalKembali.getDate().getTime()));
            ps.setDouble(5, Double.parseDouble(txtTotalBiaya.getText()));
            ps.setString(6, cmbStatus.getSelectedItem().toString());
            ps.setString(7, txtIDTransaksi.getText());
            
            ps.executeUpdate();
            
            // Update status mobil jika transaksi selesai
            if (cmbStatus.getSelectedItem().toString().equals("Selesai")) {
                String updateMobilSql = "UPDATE mobil SET status = 'Tersedia' WHERE id_mobil = ?";
                PreparedStatement psMobil = conn.prepareStatement(updateMobilSql);
                psMobil.setString(1, txtIDMobil.getText());
                psMobil.executeUpdate();
            }
            
            JOptionPane.showMessageDialog(this, "Data berhasil diupdate");
            clearForm();
            loadData();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error updating data: " + e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        try {
            String sql = "DELETE FROM transaksi WHERE id_transaksi=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, txtIDTransaksi.getText());
            
            ps.executeUpdate();
            
            // Update status mobil menjadi tersedia
            String updateMobilSql = "UPDATE mobil SET status = 'Tersedia' WHERE id_mobil = ?";
            PreparedStatement psMobil = conn.prepareStatement(updateMobilSql);
            psMobil.setString(1, txtIDMobil.getText());
            psMobil.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
            clearForm();
            loadData();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error deleting data: " + e.getMessage());
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnHitungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHitungActionPerformed
       try {
            if (txtIDMobil.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Pilih mobil terlebih dahulu!");
                return;
            }
            
            if (DateTanggalSewa.getDate() == null || DateTanggalKembali.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Pilih tanggal sewa dan kembali!");
                return;
            }
            
            String sql = "SELECT tarif_per_hari FROM mobil WHERE id_mobil = ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, txtIDMobil.getText());
            ResultSet rs = ps.executeQuery();
            
            if (rs.next()) {
                double tarifPerHari = rs.getDouble("tarif_per_hari");
                long diffInMillies = DateTanggalKembali.getDate().getTime() - DateTanggalSewa.getDate().getTime();
                long diffInDays = diffInMillies / (24 * 60 * 60 * 1000);
                
                if (diffInDays < 0) {
                    JOptionPane.showMessageDialog(this, "Tanggal kembali tidak valid!");
                    return;
                }
                
                double totalBiaya = tarifPerHari * (diffInDays + 1);
                txtTotalBiaya.setText(String.valueOf(totalBiaya));
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error menghitung biaya: " + e.getMessage());
        }
    }//GEN-LAST:event_btnHitungActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
       JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Save CSV File");
    fileChooser.setFileFilter(new FileNameExtensionFilter("CSV files (*.csv)", "csv"));
    
    if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
        File file = fileChooser.getSelectedFile();
        if (!file.getName().toLowerCase().endsWith(".csv")) {
            file = new File(file.getParentFile(), file.getName() + ".csv");
        }
        
        try {
            exportToCSV(file);
            JOptionPane.showMessageDialog(this, "Data berhasil diekspor ke CSV");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error exporting to CSV: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_btnCetakActionPerformed

    private void exportToCSV(File file) throws Exception {
    try (FileWriter fw = new FileWriter(file);
         BufferedWriter bw = new BufferedWriter(fw)) {
        
        bw.write("ID Transaksi,ID Mobil,Merk Mobil,Model Mobil,Nama Penyewa,No KTP,Tanggal Sewa,Tanggal Kembali,Total Biaya,Status");
        bw.newLine();
        
        String sql = "SELECT t.*, m.merk, m.model FROM transaksi t " +
                    "JOIN mobil m ON t.id_mobil = m.id_mobil";
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        
        while (rs.next()) {
            StringBuilder line = new StringBuilder();
            line.append(escapeCSV(rs.getString("id_transaksi"))).append(",");
            line.append(escapeCSV(rs.getString("id_mobil"))).append(",");
            line.append(escapeCSV(rs.getString("merk"))).append(",");
            line.append(escapeCSV(rs.getString("model"))).append(",");
            line.append(escapeCSV(rs.getString("nama_penyewa"))).append(",");
            line.append(escapeCSV(rs.getString("no_ktp"))).append(",");
            line.append(escapeCSV(sdf.format(rs.getDate("tanggal_sewa")))).append(",");
            line.append(escapeCSV(sdf.format(rs.getDate("tanggal_kembali")))).append(",");
            line.append(rs.getDouble("total_biaya")).append(",");
            line.append(escapeCSV(rs.getString("status_transaksi")));
            bw.write(line.toString());
            bw.newLine();
        }
        
        rs.close();
        stmt.close();
    }
}

private String escapeCSV(String value) {
    if (value == null) return "";
    if (value.contains("\"") || value.contains(",") || value.contains("\n")) {
        return "\"" + value.replace("\"", "\"\"") + "\"";
    }
    return value;
}

    private void clearForm() {
        txtIDTransaksi.setText("");
        txtIDMobil.setText("");
        txtNamaPenyewa.setText("");
        txtNoKTP.setText("");
        DateTanggalSewa.setDate(null);
        DateTanggalKembali.setDate(null);
        txtTotalBiaya.setText("");
        cmbStatus.setSelectedIndex(0);
        txtIDTransaksi.requestFocus();
    }
    
     private void selectedData(int row) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        txtIDTransaksi.setText(tblTransaksi.getValueAt(row, 0).toString());
        txtIDMobil.setText(tblTransaksi.getValueAt(row, 1).toString());
        txtNamaPenyewa.setText(tblTransaksi.getValueAt(row, 4).toString());
        txtNoKTP.setText(tblTransaksi.getValueAt(row, 5).toString());
        try {
            DateTanggalSewa.setDate(sdf.parse(tblTransaksi.getValueAt(row, 6).toString()));
            DateTanggalKembali.setDate(sdf.parse(tblTransaksi.getValueAt(row, 7).toString()));
        } catch (Exception e) {
            e.printStackTrace();
        }
        txtTotalBiaya.setText(tblTransaksi.getValueAt(row, 8).toString());
        cmbStatus.setSelectedItem(tblTransaksi.getValueAt(row, 9).toString());
    }
     
       public void addTableListener() {
        tblTransaksi.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = tblTransaksi.getSelectedRow();
                if (row >= 0) {
                    selectedData(row);
                }
            }
        });
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameTransaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateTanggalKembali;
    private com.toedter.calendar.JDateChooser DateTanggalSewa;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnHitung;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTransaksi;
    private javax.swing.JTextField txtIDMobil;
    private javax.swing.JTextField txtIDTransaksi;
    private javax.swing.JTextField txtNamaPenyewa;
    private javax.swing.JTextField txtNoKTP;
    private javax.swing.JTextField txtTotalBiaya;
    // End of variables declaration//GEN-END:variables
}
